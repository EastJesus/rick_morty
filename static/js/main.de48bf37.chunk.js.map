{"version":3,"sources":["components/Characters/character.module.css","components/Party/party.module.css","container.module.css","requests/queries/query.js","requests/GetCharacters.js","components/Characters/Character.js","components/Characters/Characters.js","components/Party/PartyImage.js","components/Party/Party.js","Container.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","SEARCH_BY_NAME","gql","useCharacters","name","useQuery","variables","loading","error","data","Character","props","character","className","styles","character_close","onClick","onDelete","src","image","alt","Characters","deletedCharacters","characters","transitionName","transitionAppear","transitionAppearTimeout","transitionEnter","transitionLeave","results","filter","item","includes","map","idx","key","PartyImage","party__image","Party","party","party__characters","rick","morty","Container","useState","value","setValue","fetchedData","setFetchedData","selectedCharacters","setSelectedCharacters","setDeletedCharacters","useEffect","length","container","game","TextField","label","variant","fullWidth","onChange","e","persist","_","debounce","target","debounceFunction","toLowerCase","client","ApolloClient","uri","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.de48bf37.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"characters\":\"character_characters__39iYS\",\"character\":\"character_character__380mH\",\"character_close\":\"character_character_close__2gJyz\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"party\":\"party_party__CWONV\",\"party__characters\":\"party_party__characters__2IDlC\",\"party__image\":\"party_party__image__zB2S8\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"container_container__3bbmT\",\"game\":\"container_game__1ah5f\"};","import gql from \"graphql-tag\";\r\n\r\nconst SEARCH_BY_NAME = gql`\r\n    query Character($name: String!) {\r\n        characters(filter: {name: $name}) {\r\n            results {\r\n                name,\r\n                image\r\n            }\r\n        }\r\n    }\r\n`\r\n\r\nexport default SEARCH_BY_NAME","import { useQuery } from \"@apollo/react-hooks\";\r\nimport SEARCH_BY_NAME from \"./queries/query\";\r\n\r\nconst useCharacters = ({ name }) => {\r\n  \r\n  const { loading, error, data } = useQuery(SEARCH_BY_NAME, {\r\n    variables: { name },\r\n  });\r\n\r\n  if (loading) return null;\r\n  if (error) return `Error! ${error}`;\r\n\r\n  return data;\r\n}\r\n\r\n\r\nexport default useCharacters","import React from 'react'\r\nimport CancelIcon from \"@material-ui/icons/Cancel\";\r\nimport styles from './character.module.css'\r\n\r\nconst Character = props => {\r\n    const {character} = props\r\n\r\n    return (\r\n      <div className={styles.character}>\r\n        <CancelIcon\r\n          className={styles.character_close}\r\n          onClick={() => {\r\n            props.onDelete(character.name);\r\n          }}\r\n        />\r\n        <img src={character.image} alt={character.name} onClick={() => {props.onClick(character)}} />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Character","import React from 'react'\r\nimport ReactCSSTransitionGroup from \"react-addons-css-transition-group\";\r\nimport Character from './Character'\r\nimport styles from './character.module.css'\r\n\r\n\r\nconst Characters = props => {\r\n\r\n    const {data, deletedCharacters} = props\r\n    \r\n    return (\r\n      <div className={styles.characters}>\r\n        <ReactCSSTransitionGroup\r\n          transitionName=\"example\"\r\n          transitionAppear={true}\r\n          transitionAppearTimeout={500}\r\n          transitionEnter={true}\r\n          transitionLeave={true}\r\n        >\r\n          {data &&\r\n            data.characters &&\r\n            data.characters.results &&\r\n            data.characters.results\r\n              .filter(item => {\r\n                return !deletedCharacters.includes(item.name);\r\n              })\r\n              .map((item, idx) => (\r\n                <Character\r\n                  key={idx}\r\n                  character={item}\r\n                  onDelete={props.onDelete}\r\n                  onClick={props.onClick}\r\n                />\r\n              ))}\r\n        </ReactCSSTransitionGroup>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Characters","import React from 'react'\r\nimport styles from './party.module.css'\r\n\r\nconst PartyImage = (props) => {\r\n\r\n    const {name, image} = props\r\n\r\n    return (\r\n      <div className={styles.party__image}>\r\n        {image && <img src={image.image} />}\r\n        {!image && <p>{name}</p>}\r\n      </div>\r\n    );\r\n} \r\n\r\nexport default PartyImage","import React from 'react'\r\nimport PartyImage from './PartyImage'\r\nimport styles from './party.module.css'\r\n\r\nconst Party = (props) => {\r\n\r\n    const {characters} = props\r\n\r\n    return (\r\n      <div className={styles.party}>\r\n        <h2>PARTY</h2>\r\n        <div className={styles.party__characters}>\r\n          <div className=\"rick\">\r\n            <PartyImage name=\"RICK\" image={characters.rick} />\r\n          </div>\r\n          <div className=\"morty\">\r\n            <PartyImage name=\"MORTY\" image={characters.morty} />\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Party","import React, { useState, useEffect, FunctionComponent } from \"react\";\r\nimport TextField from \"@material-ui/core/TextField\";\r\nimport useCharacters from './requests/GetCharacters'\r\nimport Characters from './components/Characters/Characters'\r\nimport Party from './components/Party/Party'\r\nimport styles from './container.module.css'\r\nimport './style.scss'\r\n\r\nimport _ from 'lodash'\r\n\r\nconst Container = () => {\r\n    \r\n    const [value, setValue] = useState('')\r\n    const [fetchedData, setFetchedData] = useState(null)\r\n    const [selectedCharacters, setSelectedCharacters] = useState({rick: null, morty: null})\r\n    const [deletedCharacters, setDeletedCharacters] = useState([])\r\n    const data = useCharacters({name: value})\r\n\r\n    useEffect(() => {\r\n        if (value.length > 2) setFetchedData(data)\r\n    })\r\n\r\n    // Посылаем запрос к API не чаще, чем раз в 300мс\r\n    const handleType = (e) => {\r\n        e.persist()\r\n        const debounceFunction = _.debounce(() =>{\r\n            const value = e.target.value;\r\n            if (!value || value.length < 3) return;\r\n            setValue(value);\r\n        }, 300)\r\n        \r\n        debounceFunction()\r\n    }\r\n\r\n    const handleDeleteCharacter = (name) => {\r\n        setDeletedCharacters([...deletedCharacters, ...[name]])\r\n    }\r\n\r\n    const handleSelectCharacter = (item) => {\r\n        if (item.name.toLowerCase().includes('rick')) {\r\n            setSelectedCharacters({\r\n                rick: item,\r\n                morty: selectedCharacters.morty\r\n            })\r\n        }\r\n        else if (item.name.toLowerCase().includes('morty')) {\r\n            setSelectedCharacters({\r\n                rick: selectedCharacters.rick,\r\n                morty: item\r\n            })\r\n        }\r\n    }\r\n    \r\n    return (\r\n      <div className={styles.container}>\r\n        <div className={styles.game}>\r\n          <TextField label=\"Поиск\" variant=\"outlined\" fullWidth onChange={handleType} />\r\n          <Characters \r\n            data={fetchedData} \r\n            deletedCharacters={deletedCharacters} \r\n            onDelete={handleDeleteCharacter} \r\n            onClick={handleSelectCharacter}\r\n          />\r\n          <Party characters={selectedCharacters} />\r\n        </div>\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default Container","import React from 'react';\nimport Container from './Container'\n\nimport { ApolloProvider } from \"react-apollo\";\nimport ApolloClient from \"apollo-boost\";\n\nconst client = new ApolloClient({\n  uri: \"https://rickandmortyapi.com/graphql\"\n});\n\nfunction App() {\n  return (\n    <ApolloProvider client={client}>\n      <Container />\n    </ApolloProvider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}